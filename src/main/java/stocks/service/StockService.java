package stocks.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import stocks.exception.EmptyValueException;
import stocks.exception.InvalidSymbolException;
import stocks.exception.StockNotFoundException;
import stocks.model.Quote;
import stocks.model.Stock;
import stocks.repository.StockRepository;


@Service
public class StockService {
	@Autowired // This means to get the bean called stockRepository
    // Which is auto-generated by Spring, we will use it to handle the data
	private StockRepository stockRepository;
	
	public String addNewStock (String symbol
			, String name, String exchange) {
		//Validation
		
		if(symbol.equals("") || name.equals("") || exchange.equals("")) {
			throw new EmptyValueException();		
		}
	
		
		if(!symbol.matches("[a-zA-Z]+")){
			System.out.println("Invalid Symbol!"+" |"+symbol+"| ");
			throw new InvalidSymbolException();
		}

		
		Stock n = new Stock();
		n.setSymbol(symbol);
		n.setName(name);
		n.setExchange(exchange);
		stockRepository.save(n);
		return "Saved";
	}
	
	public Iterable<Stock> getAllStocks() {
		return stockRepository.findAll();
	}
	
	public Stock getStock(String symbol) {
		Stock stock = stockRepository.findStockBySymbol(symbol);
		System.out.println("The stock: "+stock);
		if(stock == null) {
			throw new StockNotFoundException(symbol);
		}
		return stock;
	}
	
	public String deleteStock(String symbol) {
		Stock stock = stockRepository.findStockBySymbol(symbol);
		System.out.println("The ticker symbol is: "+symbol);
		if(stock == null) {
			throw new StockNotFoundException(symbol);
		}
		stockRepository.deleteBySymbol(symbol);
		return "Deleted";
	}

	public Quote getQuote(String symbol) {
		RestTemplate restTemplate = new RestTemplate();
//		Quote quote = restTemplate.getForObject("http://gturnquist-quoters.cfapps.io/api/random", Quote.class);
		Quote quote = restTemplate.getForObject("https://query1.finance.yahoo.com/v7/finance/quote?symbols="+symbol, Quote.class);
//      log.info(quote.toString());
		
//		System.out.println("ResultItem: "+);
		return quote;
	}
	
	
	
}
